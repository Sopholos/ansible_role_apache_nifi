---
- name: Prepare stores
  block:
    - name: Check if keystore exists
      stat:
        path: "{{ nifi_properties['nifi.security.keystore'] }}"
      register: keystore
    
    - name: Check if truststore exists
      stat:
        path: "{{ nifi_properties['nifi.security.truststore'] }}"
      register: truststore

    - name: Init tls-toolkit
      block:
        - shell: >
            {{ nifi_config_dirs.home }}/toolkit/bin/tls-toolkit.sh \
              standalone \
              --hostnames "{{ nifi_keystore.hostnames }}" \
              --isOverwrite \
              --outputDirectory {{ nifi_config_dirs.tmp }} \
              --trustStorePassword "{{ nifi_properties['nifi.security.truststorePasswd'] }}" \
              --keyPassword "{{ nifi_properties['nifi.security.keyPasswd'] }}" \
              --keyStorePassword "{{ nifi_properties['nifi.security.keystorePasswd'] }}"            
        
        - name: Copy keystore
          copy:
            remote_src: true
            src: "{{ nifi_config_dirs.tmp }}/{{ nifi_keystore.hostnames }}/keystore.jks"
            dest: "{{ nifi_properties['nifi.security.keystore'] }}"

        - name: Copy truststore
          copy:
            remote_src: true
            src: "{{ nifi_config_dirs.tmp }}/{{ nifi_keystore.hostnames }}/truststore.jks"
            dest: "{{ nifi_properties['nifi.security.truststore'] }}"
      when:
        - not keystore.stat.exists
        - not truststore.stat.exists
  when:
    - nifi_properties['nifi.security.truststore'] is defined
    - nifi_properties['nifi.security.keystore'] is defined
  notify: Restart NiFi
